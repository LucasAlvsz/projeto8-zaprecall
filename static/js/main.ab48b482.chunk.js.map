{"version":3,"sources":["Components/InitalPage/InitalPage.js","Components/Header/Header.js","Components/Footer/StatusIcons.js","Components/Footer/Footer.js","Components/Deck/FlashCard.js","Components/Deck/Deck.js","index.js"],"names":["InitialPage","pageStatus","goalAndDeck","decks","name","deck","question","answer","useState","goalStatus","setGoalStatus","deckStatus","setDeckStatus","buttonStatus","className","src","required","onChange","target","value","selected","disabled","map","key","length","type","min","max","placeholder","goal","inputChoicesValidation","onClick","sort","Math","random","Header","StatusIcons","statusIcon","Footer","numQuestions","numCompleted","statusIcons","zapFinished","zapAmount","reestart","i","Flashcard","questionNum","updateNumCompleted","updateStatusIcon","updateZapAmount","updateReestart","status","flashCardStatus","setFlashCardStatus","console","log","e","stopPropagation","Deck","App","setPageStatus","setNumCompleted","setStatusIcon","setGoalAndDeck","setZapAmount","updatedPageStatus","updatedGoal","updatedDeck","numCompletedUpdated","element","document","querySelector","render"],"mappings":"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","file":"static/js/main.ab48b482.chunk.js","sourcesContent":["import { useState } from \"react\"\nexport default function InitialPage({ pageStatus, goalAndDeck }) {\n    const decks = [{\n        name: \"JSX1\",\n        deck: [{\n            question: \"O que √© JSX?\",\n            answer: \"Uma extens√£o de linguagem do JavaScript\"\n        }, {\n            question: \"O React √© __\",\n            answer: \"Uma biblioteca JavaScript para constru√ß√£o de interfaces\"\n        }, {\n            question: \"Componentes devem iniciar com __\",\n            answer: \"Letra mai√∫scula\"\n        }, {\n            question: \"Podemos colocar __ dentro do JSX\",\n            answer: \"Express√µes\"\n        }, {\n            question: \"O ReactDOM nos ajuda __ \",\n            answer: \"Interagindo com a DOM para colocar componentes React na mesma\"\n        }, {\n            question: \"Usamos o npm para __\",\n            answer: \"Gerenciar os pacotes necess√°rios e suas depend√™ncias\"\n        }, {\n            question: \"Usamos props para __\",\n            answer: \"Passar diferentes informa√ß√µes para componentes\"\n        }, {\n            question: \"Usamos estado (state) para __\",\n            answer: \"Dizer para o React quais informa√ß√µes quando atualizadas devem renderizar a tela novamente\"\n        }\n        ]\n    }, {\n        name: \"Starter-Pack - Driven\",\n        deck: [{\n            question: \"Qual √© o instrutor da Driven conhecido pelo seu pulinho?\",\n            answer: \"Dieg√£o!\"\n        },{\n            question: \"Recall\",\n            answer: \"Luana\"\n        },{\n            question: \"A melhor turma da Driven √© a __\",\n            answer: \"Turma 5\"\n        },{\n            question: \"Qual o segundo maior desejo dos alunos da T5\",\n            answer: \"Cupom do Ifood\"\n        },{\n            question: \"Confia no __\",\n            answer: \"Processo\"\n        },{\n            question: \"Show de __\",\n            answer: \"Bolinhas\"\n        },{\n            question: \"Recording in __\",\n            answer: \"Progress\"\n        },{\n            question: \"Quem √© a entidade mais temida logo ap√≥s um exerc√≠cio\",\n            answer: \"Ela... A...  R o l e t a üò±\"\n        },\n        ]\n    }\n    ]\n    const [goalStatus, setGoalStatus] = useState(\"\")\n    const [deckStatus, setDeckStatus] = useState(\"\")\n    let buttonStatus = \"disabled-button\"\n    function inputChoicesValidation(goalStatus, deckStatus) {\n        if (goalStatus != \"\" && deckStatus != \"\" && goalStatus > 0) {\n            if (goalStatus > deckStatus.length)\n                return <div className=\"warning\">‚ö†Ô∏è A meta de Zaps √© maior do que o n√∫mero de Flashcards! ‚ö†Ô∏è</div>\n            else\n                buttonStatus = \"enabled\"\n        }\n\n\n    }\n    return (\n        <div className=\"initial-page\">\n            <img src=\"imgs/favicon.ico\" />\n            <h1 className=\"title\">ZapRecall</h1>\n            <select required onChange={deck => setDeckStatus(decks[deck.target.value].deck)}>\n                <option value=\"\" selected disabled > Escolha seu deck</option>\n                {decks.map((deck, key) => {\n                    return <option value={key} key={key}> {deck.name} {\" - \" + deck.deck.length + \" Cards\"}</option>\n                })}\n            </select>\n            <input type=\"number\" min=\"1\" max={deckStatus.length} placeholder=\"Digite sua meta de zaps...\"\n                onChange={goal => setGoalStatus(goal.target.value)}\n            />\n            {inputChoicesValidation(goalStatus, deckStatus)}\n            <button\n                className={buttonStatus}\n                onClick={() => {\n                    pageStatus(\"not-inital\")\n                    goalAndDeck(goalStatus, deckStatus.sort(() => Math.random() - 0.5))\n                }}>\n                Iniciar Recall!\n            </button>\n        </div>\n    )\n}","export default function Header() {\n    return (\n        <header>\n            <img src=\"./imgs/favicon.ico\" />\n            <p>ZapRecall</p>\n        </header>\n    )\n}","export default function StatusIcons({ statusIcon }) {\n    return (\n        <img src={statusIcon} />\n    )\n}","import StatusIcons from \"./StatusIcons\"\nexport default function Footer({ numQuestions, numCompleted, statusIcons, zapFinished, zapAmount, goal, reestart }) {\n    return (\n        <footer className={zapFinished ? \"zap-end\" : \"\"}>\n            {zapFinished\n                ? zapAmount >= goal\n                    ? <>\n                        <div className=\"title\">\n                            <img src=\"./imgs/parabens.png\" />\n                            <p>PARAB√âNS!</p>\n                        </div>\n                        <p className=\"final-text\">Voc√™ n√£o esqueceu de nenhum flashcard!</p>\n                    </>\n                    : <>\n                        <div className=\"title\">\n                            <img src=\"./imgs/sad.png\" />\n                            <p>PUTZ!</p>\n                        </div>\n                        <p className=\"final-text\">Ainda faltaram alguns...\n                            Mas n√£o desanime!</p>\n                    </>\n                : <p>{numCompleted}/{numQuestions} CONCLU√çDOS</p>\n            }\n            <div className=\"status-icon\">\n                {statusIcons.length !== 0 ? statusIcons.map((statusIcon, i) => {\n                    return (\n                        <StatusIcons\n                            statusIcon={statusIcon}\n                            key={i}\n                        />\n                    )\n                }) : \"\"}\n            </div>\n        </footer>\n    )\n}","import { useState } from \"react\"\nexport default function Flashcard({ questionNum, question, answer, updateNumCompleted, updateStatusIcon, updateZapAmount, reestart, updateReestart }) {\n    function checkStatus(status) {\n        if (status === \"flash-card\") {\n            return (\n                <>\n                    <p>Pergunta {questionNum}</p>\n                    <img src=\"./imgs/play.svg\" />\n                </>\n            )\n        }\n        else if (status === \"opened-flash-card\") {\n            return (\n                <>\n                    <p>{question}</p>\n                    <img src=\"./imgs/turn.svg\" onClick={(e) => {\n                        e.stopPropagation()\n                        setFlashCardStatus(\"turned-flash-card\")\n                    }} />\n                </>\n            )\n        }\n        else if (status === \"turned-flash-card\") {\n            return (\n                <>\n                    <p>{answer}</p>\n                    <div className=\"buttons\">\n                        <button onClick={(e) => {\n                            e.stopPropagation()\n                            updateNumCompleted(1)\n                            updateStatusIcon(\"./imgs/notRemember.svg\")\n                            setFlashCardStatus(\"not-remember\")\n                        }}>\n                            N√£o lembrei\n                        </button>\n                        <button onClick={(e) => {\n                            e.stopPropagation()\n                            updateNumCompleted(1)\n                            updateStatusIcon(\"./imgs/almostNotRemember.svg\")\n                            setFlashCardStatus(\"almost-not-remember\")\n                        }}>\n                            Quase n√£o lembrei\n                        </button>\n                        <button onClick={(e) => {\n                            e.stopPropagation()\n                            updateNumCompleted(1)\n                            updateZapAmount(1)\n                            updateStatusIcon(\"./imgs/zap.svg\")\n                            setFlashCardStatus(\"zap\")\n                        }}>\n                            Zap!\n                        </button>\n                    </div>\n                </>\n            )\n        }\n        else if (status === \"not-remember\") {\n            return (\n                <>\n                    <p>Pergunta {questionNum}</p>\n                    <img src=\"./imgs/notRemember.svg\" />\n                </>\n            )\n        }\n        else if (status === \"almost-not-remember\") {\n            return (\n                <>\n                    <p>Pergunta {questionNum}</p>\n                    <img src=\"./imgs/almostNotRemember.svg\" />\n                </>\n            )\n        }\n        else if (status === \"zap\") {\n            return (\n                <>\n                    <p>Pergunta {questionNum}</p>\n                    <img src=\"./imgs/zap.svg\" />\n                </>\n            )\n        }\n    }\n    const [flashCardStatus, setFlashCardStatus] = useState(\"flash-card\")\n \n    if (reestart) {\n        console.log(\"aaaa\");\n        setFlashCardStatus(\"flash-card\")\n        updateReestart(false)\n    }\n\n    return (\n        <div className={flashCardStatus} onClick={() => {\n            flashCardStatus === \"flash-card\"\n                ? setFlashCardStatus(\"opened-flash-card\")\n                : setFlashCardStatus(\"flash-card\")\n        }\n        }>\n            {checkStatus(flashCardStatus)}\n        </div>\n    )\n}\n\n","import Flashcard from \"./FlashCard\"\nexport default function Deck({ deck, updateNumCompleted, updateStatusIcon, updateZapAmount, reestart, updateReestart }) {\n    return (\n        <div className=\"deck\">\n            {deck.map(({ question, answer }, questionNum) => {\n                return (\n                    <Flashcard\n                        questionNum={questionNum + 1}\n                        key={questionNum + 1}\n                        question={question}\n                        answer={answer}\n                        updateNumCompleted={updateNumCompleted}\n                        updateStatusIcon={updateStatusIcon}\n                        updateZapAmount={updateZapAmount}\n                        reestart={reestart}\n                        updateReestart={updateReestart}\n                    />\n                )\n            })\n            }\n        </div>\n    )\n}","import { render } from \"react-dom\";\nimport { useState } from \"react\"\nimport InitialPage from \"./Components/InitalPage/InitalPage\";\nimport Header from \"./Components/Header/Header\";\nimport Footer from \"./Components/Footer/Footer\";\nimport Deck from \"./Components/Deck/Deck\"\nfunction App() {\n    const [pageStatus, setPageStatus] = useState(\"initial\")\n    const [numCompleted, setNumCompleted] = useState(0)\n    const [statusIcons, setStatusIcon] = useState([])\n    const [goalAndDeck, setGoalAndDeck] = useState({})\n    const [zapAmount, setZapAmount] = useState(0)\n    let zapFinished = false\n\n    return (\n        <>\n            {pageStatus === \"initial\"\n                ? <InitialPage\n                    pageStatus={updatedPageStatus => setPageStatus(updatedPageStatus)}\n                    goalAndDeck={(updatedGoal, updatedDeck) => setGoalAndDeck({ goal: updatedGoal, deck: updatedDeck })}\n                />\n                : <>\n                    <Header />\n                    <main>\n                        <Deck\n                            deck={goalAndDeck.deck}\n                            updateNumCompleted={numCompletedUpdated => setNumCompleted(numCompletedUpdated + numCompleted)}\n                            updateStatusIcon={updateStatusIcon => setStatusIcon([...statusIcons, updateStatusIcon])}\n                            updateZapAmount={updateZapAmount => setZapAmount(updateZapAmount + zapAmount)}\n                        />\n                    </main>\n                    <Footer\n                        numQuestions={goalAndDeck.deck.length}\n                        numCompleted={numCompleted}\n                        statusIcons={statusIcons}\n                        zapFinished={numCompleted === goalAndDeck.deck.length ? !zapFinished : zapFinished}\n                        zapAmount={zapAmount}\n                        goal={goalAndDeck.goal}\n                    />\n                </>\n            }\n        </>\n    )\n}\n\nconst element = document.querySelector(\".root\")\nrender(<App />, element)"],"sourceRoot":""}